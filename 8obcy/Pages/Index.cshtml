@page
@model IndexModel
@{
    ViewData["Title"] = "8obcy";
}

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div id="titlearea" class="text-center">
                    <h1 class="title">8OBCY</h1>
                    <h5>Chcesz poznać nowych interesujacych ludzi? To miejsce idealne do tego stworzone. <br>Rozpocznij anonimową rozmowę z losową osobą, może poznasz kogoś ciekawego</h5>
                </div>

                <div id="userinfo" class="row text-center">
                    <div class="col-6 offset-3">
                        <label for="username"><b>Wprowadź swoją nazwę</b></label>
                        <input type="text" class="form-control" id="username" name="username" autocomplete="off" />
                        <button type="button" class="button-neon" onclick="SetUsername()">Szukaj rozmówcy</button>
                    </div>
                </div>
                <div id="messagearea" class="row" style="display: none;">
                    <div class="col-md-8 offset-md-2 col-sm-10 offset-sm-1">
                        <div class="messagecard">
                            <div class="row">
                                <div class="col-12">
                                    <ul id="messageList"></ul>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div>Dołączono jako : <b><span id="username1">Not Set</span></b></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-9 col-md-12">
                                <input type="text" class="message" id="message" autocomplete="off" />
                            </div>
                            <div class="col-lg-3 col-md-12">
                                <input type="button" class="sendmessage" id="sendButton" value="WYŚLIJ" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4 offset-4">
                                <button type="button" id="nextStranger" class="button-new-chat" onclick="NewChat()">Następny nieznajomy</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/crypto-js/crypto-js.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    var username = "";
    var connectionId = "";

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function(user, message, conId){
        var bytes = CryptoJS.AES.decrypt(message, conId);
        var originalText = bytes.toString(CryptoJS.enc.Utf8);
        var msg = originalText.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");

        if(conId==connectionId){
             var encodedMsg = "<li class='right' ><div class='msg' >"+msg+"</div><div class='user'>"+user+"</div></li>";
        }else{
             var encodedMsg = "<li class='left'><div class='msg' >"+msg+"</div><div class='user'>"+user+"</div></li>";
        }   
        document.getElementById("messageList").innerHTML += encodedMsg;
    });
    //Message about ending conversation
    connection.on("EndConversationMessage", function (message, usrnm) {
        if (usrnm != username){
            document.getElementById("messageList").innerHTML += "<hr><li><div class='disconnect'>" + message + "</div></li>";
        }
        document.getElementById("sendButton").disabled = true;
    });
    //Message about finding conversation
    connection.on("FoundConversationMessage", function (message) {
        document.getElementById("messageList").innerHTML += "<hr><li><div class='disconnect'>" + message + "</div></li>";
        document.getElementById("sendButton").disabled = false;
        document.getElementById("nextStranger").disabled = false;
    });
    //Message about searching for conversation
    connection.on("SearchingForConversationMessage", function (message) {
        document.getElementById("messageList").innerHTML += "<hr><li><div class='disconnect'>" + message + "</div></li>";
        document.getElementById("sendButton").disabled = true;
        document.getElementById("nextStranger").disabled = true;
    });
   

    document.getElementById("sendButton").addEventListener("click", function(event){
        var message = document.getElementById("message").value;
        message = CryptoJS.AES.encrypt(message, connectionId).toString();
        connection.invoke("SendMessage", username,message).then(function(){
            document.getElementById("message").value=""
        }).catch(function(err){
            return console.error(err.toString());
        });
        event.preventDefault();
    });

    function NewChat(){
         var message = username+" zmienił rozmówcę. Poszukaj następnego nieznajomego!";
          connection.invoke("ChangeGroup", message, username).then(function(){
            document.getElementById("message").value=""
        }).catch(function(err){
            return console.error(err.toString());
        });
         connection.invoke("GetConnectionId").catch(function(err){
            return console.error(err.toString());
        });
    }

    function SetUsername(){
        connection.start().then(function () {
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });
        var usernameinput = document.getElementById("username").value;
        if (usernameinput == ""){
            alert("please enter you user name");
            return;
        }
        username = usernameinput;
        document.getElementById("userinfo").style.display = "none";
        document.getElementById("titlearea").style.display = "none";
        document.getElementById("messagearea").style.display = "block";
        document.getElementById("username1").innerText = usernameinput;
    }

    connection.on("GetConnectionId", function(conId){
        connectionId = conId;
    });

    window.onbeforeunload = function (e) {
        connection.stop();
    }

</script>